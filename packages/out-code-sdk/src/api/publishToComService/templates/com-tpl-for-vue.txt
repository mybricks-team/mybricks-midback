<template>
  <Renderer
    v-bind="$attrs"
    ref="m_comRef"
    :props="{ ...m_childProps,--defineTplProps-- }"
    :config="m_config"
    :json="m_json"
    :comDefs="m_comDefs"
  />
</template>

<script lang="ts">
import { ref, defineComponent } from 'vue'
import type { PropType } from 'vue';
import RendererComponent from '@mybricks/renderer-pc/toVue'
import { toJSON, config } from './config'
--componentImports--

export default defineComponent({
  props: {
    --props--
  },
  components: {
    Renderer: RendererComponent
  },
  emits: {
    --emitsArr--
  },
  defineExpose: --defineExposeArr--,
  setup(props, ctx) {
    const m_comRef = ref()
    return {
      m_comRef,
      m_childProps: {
        --setupPropsStr--
      },
      m_config: config,
      m_json: toJSON,
      m_comDefs: --comDefs--
    }
  },
  methods: {
    --methodsStr--
    _getRef(params, key, res) {
      return new Promise((resolve, reject) => {
        if (this.m_comRef.currentRef && this.m_comRef.currentRef[key]) {
          if (res) {
            res(this.m_comRef.currentRef)
          } else {
            resolve(this.m_comRef.currentRef)
          }
        } else {
          setTimeout(() => {
            this._getRef(params, key, res).then(() => {
              resolve(this.m_comRef.currentRef)
            })
          }, 0)
        }
      })
    }
  }
})

</script>

<style>
@import 'antd/dist/antd.css';

</style>